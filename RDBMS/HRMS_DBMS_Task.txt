1) Create database hrms;
2) use hrms;

3) CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(100),
    ManagerID INT
);

4) CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    FirstName VARCHAR(100),
    LastName VARCHAR(100),
    Email VARCHAR(100),
    Phone VARCHAR(20),
    HireDate DATE,
    DepartmentID INT,
    ManagerID INT,
    Salary DECIMAL(10, 2),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID),
    FOREIGN KEY (ManagerID) REFERENCES Employees(EmployeeID)
);

5) CREATE TABLE PerformanceReviews (
    ReviewID INT PRIMARY KEY,
    EmployeeID INT,
    ReviewDate DATE,
    PerformanceScore VARCHAR(20),
    Comments TEXT,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

6) CREATE TABLE Payroll (
    PayrollID INT PRIMARY KEY,
    EmployeeID INT,
    PaymentDate DATE,
    Amount DECIMAL(10, 2),
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

7) INSERT INTO Departments (DepartmentID, DepartmentName, ManagerID) VALUES
(1, 'HR', 101),
(2, 'IT', 102),
(3, 'Finance', 103),
(4, 'Sales', 104),
(5, 'Marketing', 105),
(6, 'Operations', 106),
(7, 'Customer Service', 107),
(8, 'R&D', 108),
(9, 'Legal', 109),
(10, 'Product Management', 110);

8) INSERT INTO Employees (EmployeeID, FirstName, LastName, Email, Phone, HireDate, DepartmentID, ManagerID, Salary) VALUES
(101, 'John', 'Doe', 'johndoe@example.com', '555-1234', '2022-03-01', 1, NULL, 60000),
(102, 'Jane', 'Smith', 'janesmith@example.com', '555-5678', '2021-07-15', 2, NULL, 75000),
(103, 'Michael', 'Johnson', 'michaelj@example.com', '555-9101', '2023-05-01', 3, NULL, 85000),
(104, 'Emily', 'Davis', 'emilydavis@example.com', '555-1122', '2020-06-10', 4, NULL, 50000),
(105, 'Sarah', 'Lee', 'sarahlee@example.com', '555-1313', '2021-10-05', 5, 101, 70000),
(106, 'David', 'White', 'davidwhite@example.com', '555-1414', '2019-01-20', 6, 102, 90000),
(107, 'Daniel', 'Martinez', 'danielm@example.com', '555-1515', '2020-08-22', 7, 103, 62000),
(108, 'Laura', 'Garcia', 'laurag@example.com', '555-1616', '2022-12-03', 8, 104, 95000),
(109, 'Daniel', 'Taylor', 'danieltaylor@example.com', '555-1717', '2018-04-12', 9, 105, 110000),
(110, 'Sophia', 'Miller', 'sophiamiller@example.com', '555-1818', '2021-03-05', 10, 106, 115000);

9) INSERT INTO PerformanceReviews (ReviewID, EmployeeID, ReviewDate, PerformanceScore, Comments) VALUES
(1, 101, '2023-04-01', 'Excellent', 'Exceeded all expectations'),
(2, 102, '2023-03-15', 'Good', 'Good performance but room for improvement'),
(3, 103, '2023-02-20', 'Excellent', 'Great leadership skills shown'),
(4, 104, '2022-12-12', 'Poor', 'Needs improvement in communication skills'),
(5, 105, '2023-01-30', 'Average', 'Good effort but needs more consistency'),
(6, 106, '2023-03-02', 'Good', 'Good technical skills but lacking in teamwork'),
(7, 107, '2023-04-05', 'Excellent', 'Strong problem-solving skills'),
(8, 108, '2023-03-01', 'Excellent', 'Innovation and creativity shine'),
(9, 109, '2022-10-10', 'Good', 'Good strategic thinking'),
(10, 110, '2023-02-10', 'Average', 'Consistent but needs to show more initiative');

10) INSERT INTO Payroll (PayrollID, EmployeeID, PaymentDate, Amount, PaymentMethod) VALUES
(1, 101, '2023-03-31', 6000, 'Bank Transfer'),
(2, 102, '2023-03-31', 7500, 'Check'),
(3, 103, '2023-03-31', 8500, 'Bank Transfer'),
(4, 104, '2023-03-31', 5000, 'Bank Transfer'),
(5, 105, '2023-03-31', 7000, 'Check'),
(6, 106, '2023-03-31', 9000, 'Bank Transfer'),
(7, 107, '2023-03-31', 6200, 'Bank Transfer'),
(8, 108, '2023-03-31', 9500, 'Check'),
(9, 109, '2023-03-31', 11000, 'Bank Transfer'),
(10, 110, '2023-03-31', 11500, 'Bank Transfer');


Q.) Sql Queries:

1.Retrieve the names and contact details of employees hired after January 1, 2023.

SELECT FirstName, LastName, Email, Phone
FROM Employees
WHERE HireDate > '2023-01-01';

2.Find the total payroll amount paid to each department.

SELECT d.DepartmentName, SUM(p.Amount) AS TotalPayroll
FROM Payroll p
JOIN Employees e ON p.EmployeeID = e.EmployeeID
JOIN Departments d ON e.DepartmentID = d.DepartmentID
GROUP BY d.DepartmentName;

3.List all employees who have not been assigned a manager.

SELECT FirstName, LastName
FROM Employees
WHERE ManagerID IS NULL;

4.Retrieve the highest salary in each department along with the employeeâ€™s name.

SELECT e.DepartmentID, e.FirstName, e.LastName, e.Salary
FROM Employees e
WHERE e.Salary = (SELECT MAX(Salary) FROM Employees WHERE DepartmentID = e.DepartmentID);

5.Find the most recent performance review for each employee.

SELECT e.EmployeeID, e.FirstName, e.LastName, pr.ReviewDate, pr.PerformanceScore
FROM PerformanceReviews pr
JOIN Employees e ON pr.EmployeeID = e.EmployeeID
WHERE pr.ReviewDate = (SELECT MAX(ReviewDate) FROM PerformanceReviews WHERE EmployeeID = e.EmployeeID);

6.Count the number of employees in each department.

SELECT d.DepartmentName, COUNT(e.EmployeeID) AS EmployeeCount
FROM Employees e
JOIN Departments d ON e.DepartmentID = d.DepartmentID
GROUP BY d.DepartmentName;

7.List all employees who have received a performance score of "Excellent." Identify the most frequently used payment method in payroll.

-- Employees with "Excellent" score
SELECT e.FirstName, e.LastName, pr.PerformanceScore
FROM PerformanceReviews pr
JOIN Employees e ON pr.EmployeeID = e.EmployeeID
WHERE pr.PerformanceScore = 'Excellent';

-- Most frequent payment method
SELECT PaymentMethod, COUNT(*) AS MethodCount
FROM Payroll
GROUP BY PaymentMethod
ORDER BY MethodCount DESC
LIMIT 1;

8.Retrieve the top 5 highest-paid employees along with their departments.

SELECT e.FirstName, e.LastName, e.Salary, d.DepartmentName
FROM Employees e
JOIN Departments d ON e.DepartmentID = d.DepartmentID
ORDER BY e.Salary DESC
LIMIT 5;

9.Show details of all employees who report directly to a specific manager (e.g., ManagerID = 101).

SELECT e.FirstName, e.LastName, e.Email, e.Phone, e.Salary
FROM Employees e
WHERE e.ManagerID = 101;